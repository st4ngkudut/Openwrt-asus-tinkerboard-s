name: Build OpenWrt for Tinker Board S

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Pilih versi OpenWrt"
        required: true
        type: choice
        options:
          - "22.03.0"
          - "23.05.0"
          - "23.05.1"
          - "23.05.2"
          - "23.05.3"
          - "23.05.4"
          - "23.05.5"
          - "23.05.6"
          - "23.05.7"
          - "24.10.1"
          - "24.10.2"

jobs:
  build:
    runs-on: ubuntu-22.04
    name: Build OpenWrt ${{ github.event.inputs.version }}

    steps:
      - uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          sudo apt update
          sudo apt install -y build-essential clang flex bison g++ gawk \
            gettext git libncurses-dev libssl-dev python3 unzip zlib1g-dev \
            subversion libelf-dev ccache wget gcc-arm-linux-gnueabi

      - name: Clone OpenWrt source
        run: |
          VERSION=${{ github.event.inputs.version }}
          if [[ "$VERSION" == 22.03.* ]]; then BRANCH="openwrt-22.03"
          elif [[ "$VERSION" == 23.05.* ]]; then BRANCH="openwrt-23.05"
          elif [[ "$VERSION" == 24.* ]]; then BRANCH="master"
          else echo "Unknown version $VERSION"; exit 1; fi
          git clone --depth=1 -b $BRANCH https://git.openwrt.org/openwrt/openwrt.git
          cd openwrt; git fetch --tags; git checkout v$VERSION

      - name: Update & install feeds
        run: |
          cd openwrt
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Add DTS for Tinker Board S
        run: |
          mkdir -p openwrt/target/linux/armvirt/files/arch/arm/boot/dts/rockchip
          cd openwrt/target/linux/armvirt/files/arch/arm/boot/dts/rockchip
          curl -LO https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git/plain/arch/arm/boot/dts/rockchip/rk3288-tinker-s.dts
          curl -LO https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git/plain/arch/arm/boot/dts/rockchip/rk3288-tinker.dtsi

      - name: Copy configuration files
        run: |
          cp configs/config.common openwrt/.config
          mkdir -p openwrt/output-sdboot
          cp configs/extlinux.conf openwrt/output-sdboot/
          cp configs/mkimage.sh openwrt/output-sdboot/
          chmod +x openwrt/output-sdboot/mkimage.sh

      - name: Build U-Boot
        run: |
          git clone --depth=1 https://source.denx.de/u-boot/u-boot.git uboot
          cd uboot
          export CROSS_COMPILE=arm-linux-gnueabi-
          make tinker-rk3288_defconfig
          make -j$(nproc)
          mkdir -p ../openwrt/output-sdboot
          cp spl/u-boot-spl.bin ../openwrt/output-sdboot/
          cp u-boot.bin ../openwrt/output-sdboot/

      - name: Build OpenWrt
        run: |
          cd openwrt
          make defconfig
          make download -j$(nproc)
          make -j$(nproc) || make -j1 V=s

      - name: Prepare SD boot image
        run: |
          cd openwrt/bin/targets/armvirt/32/
          mkdir -p ../../../output-sdboot
          cp zImage ../../../output-sdboot/
          cp *.dtb ../../../output-sdboot/
          cp root.ext4.gz ../../../output-sdboot/
          cd ../../../output-sdboot
          gunzip -f root.ext4.gz
          mv root.ext4 rootfs.ext4
          tar -czf rootfs.tar.gz rootfs.ext4

      - name: Create compressed .img.gz
        run: |
          cd openwrt/output-sdboot
          ./mkimage.sh

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: openwrt-tinkerboard-${{ github.event.inputs.version }}
          path: |
            openwrt/output-sdboot/openwrt.img.gz
            openwrt/output-sdboot/u-boot*
            openwrt/output-sdboot/*.dtb
            openwrt/output-sdboot/zImage
